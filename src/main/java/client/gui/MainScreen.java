/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package client.gui;

import client.Client;
import commandsmanager.BaseCommand;
import commandsmanager.CommandFactory;
import commandsmanager.CommandUtils;
import java.awt.GridLayout;
import java.io.IOException;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import client.ClientManager;
import gamelogic.Fighter;
import gamelogic.Player;
import java.awt.Color;
import java.awt.Dimension;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import javax.swing.BorderFactory;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.border.Border;

/**
 *
 * @author ivan
 */
public class MainScreen extends javax.swing.JFrame {
    
    private Player player;
    
    /**
     * Creates new form NewJFrame
     */
    public MainScreen() {
        initComponents();
        initClient();
        ClientManager.getCM().setMainScreen(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        pnlGameData = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        pnlCommands = new javax.swing.JPanel();
        txfCommand = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaCommandsRegistry = new javax.swing.JTextArea();
        btnSend = new javax.swing.JButton();
        pnlBoard = new javax.swing.JPanel();
        pnlLeft = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaAttackResults = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txaLogs = new javax.swing.JTextArea();
        pnlRight = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 84, 119));
        setSize(new java.awt.Dimension(1280, 720));

        pnlMain.setBackground(new java.awt.Color(0, 84, 119));
        pnlMain.setFocusable(false);
        pnlMain.setPreferredSize(new java.awt.Dimension(1516, 720));

        pnlGameData.setBackground(new java.awt.Color(0, 84, 119));
        pnlGameData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        pnlGameData.setFocusable(false);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel1.setText("Vida:");
        jLabel1.setFocusable(false);

        jTextField1.setBackground(new java.awt.Color(0, 84, 119));
        jTextField1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setText("50%");
        jTextField1.setBorder(null);
        jTextField1.setFocusable(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setText("Casillas destruidas: ");
        jLabel2.setFocusable(false);

        jTextField2.setBackground(new java.awt.Color(0, 84, 119));
        jTextField2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setText("200");
        jTextField2.setBorder(null);
        jTextField2.setFocusable(false);

        javax.swing.GroupLayout pnlGameDataLayout = new javax.swing.GroupLayout(pnlGameData);
        pnlGameData.setLayout(pnlGameDataLayout);
        pnlGameDataLayout.setHorizontalGroup(
            pnlGameDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGameDataLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addGap(0, 0, 0)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 434, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(0, 0, 0)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );
        pnlGameDataLayout.setVerticalGroup(
            pnlGameDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGameDataLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnlGameDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGameDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlGameDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(104, Short.MAX_VALUE))
        );

        pnlCommands.setBackground(new java.awt.Color(0, 84, 119));
        pnlCommands.setFocusable(false);

        txfCommand.setBackground(new java.awt.Color(0, 84, 119));
        txfCommand.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txfCommand.setForeground(new java.awt.Color(255, 255, 255));
        txfCommand.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        txfCommand.setPreferredSize(new java.awt.Dimension(65, 35));
        txfCommand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfCommandActionPerformed(evt);
            }
        });

        jScrollPane1.setFocusable(false);

        txaCommandsRegistry.setEditable(false);
        txaCommandsRegistry.setBackground(new java.awt.Color(0, 84, 119));
        txaCommandsRegistry.setColumns(20);
        txaCommandsRegistry.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txaCommandsRegistry.setForeground(new java.awt.Color(255, 255, 255));
        txaCommandsRegistry.setRows(5);
        txaCommandsRegistry.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        txaCommandsRegistry.setFocusable(false);
        jScrollPane1.setViewportView(txaCommandsRegistry);

        btnSend.setBackground(new java.awt.Color(0, 84, 119));
        btnSend.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnSend.setForeground(new java.awt.Color(255, 255, 255));
        btnSend.setText("Enviar");
        btnSend.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        btnSend.setFocusable(false);
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCommandsLayout = new javax.swing.GroupLayout(pnlCommands);
        pnlCommands.setLayout(pnlCommandsLayout);
        pnlCommandsLayout.setHorizontalGroup(
            pnlCommandsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCommandsLayout.createSequentialGroup()
                .addComponent(txfCommand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        pnlCommandsLayout.setVerticalGroup(
            pnlCommandsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCommandsLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCommandsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txfCommand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pnlBoard.setBackground(new java.awt.Color(0, 84, 119));
        pnlBoard.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        pnlBoard.setFocusable(false);
        pnlBoard.setPreferredSize(new java.awt.Dimension(524, 350));

        javax.swing.GroupLayout pnlBoardLayout = new javax.swing.GroupLayout(pnlBoard);
        pnlBoard.setLayout(pnlBoardLayout);
        pnlBoardLayout.setHorizontalGroup(
            pnlBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlBoardLayout.setVerticalGroup(
            pnlBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pnlLeft.setBackground(new java.awt.Color(0, 84, 119));
        pnlLeft.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        pnlLeft.setFocusable(false);
        pnlLeft.setPreferredSize(new java.awt.Dimension(405, 539));

        jScrollPane2.setFocusable(false);

        txaAttackResults.setEditable(false);
        txaAttackResults.setBackground(new java.awt.Color(0, 84, 119));
        txaAttackResults.setColumns(20);
        txaAttackResults.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txaAttackResults.setForeground(new java.awt.Color(255, 255, 255));
        txaAttackResults.setRows(5);
        txaAttackResults.setText("Resultado del ataque:\n");
        txaAttackResults.setBorder(null);
        txaAttackResults.setFocusable(false);
        jScrollPane2.setViewportView(txaAttackResults);

        jScrollPane3.setFocusable(false);

        txaLogs.setEditable(false);
        txaLogs.setBackground(new java.awt.Color(0, 84, 119));
        txaLogs.setColumns(20);
        txaLogs.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        txaLogs.setForeground(new java.awt.Color(255, 255, 255));
        txaLogs.setRows(5);
        txaLogs.setText("Bitacora: \n");
        txaLogs.setBorder(null);
        txaLogs.setFocusable(false);
        jScrollPane3.setViewportView(txaLogs);

        javax.swing.GroupLayout pnlLeftLayout = new javax.swing.GroupLayout(pnlLeft);
        pnlLeft.setLayout(pnlLeftLayout);
        pnlLeftLayout.setHorizontalGroup(
            pnlLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
            .addComponent(jScrollPane3)
        );
        pnlLeftLayout.setVerticalGroup(
            pnlLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLeftLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlRight.setBackground(new java.awt.Color(0, 84, 119));
        pnlRight.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        pnlRight.setFocusable(false);
        pnlRight.setPreferredSize(new java.awt.Dimension(315, 539));

        javax.swing.GroupLayout pnlRightLayout = new javax.swing.GroupLayout(pnlRight);
        pnlRight.setLayout(pnlRightLayout);
        pnlRightLayout.setHorizontalGroup(
            pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 264, Short.MAX_VALUE)
        );
        pnlRightLayout.setVerticalGroup(
            pnlRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 537, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlCommands, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addComponent(pnlLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlGameData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlBoard, javax.swing.GroupLayout.DEFAULT_SIZE, 872, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlRight, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(pnlMainLayout.createSequentialGroup()
                            .addComponent(pnlBoard, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(pnlGameData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(pnlLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlRight, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(pnlCommands, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlGameData.getAccessibleContext().setAccessibleParent(pnlMain);
        pnlCommands.getAccessibleContext().setAccessibleParent(pnlMain);
        pnlBoard.getAccessibleContext().setAccessibleParent(pnlMain);
        pnlLeft.getAccessibleContext().setAccessibleParent(pnlMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void txfCommandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfCommandActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfCommandActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        String comando = txfCommand.getText().trim();
        System.out.println("comando: " + comando);
        if (!comando.equals("")) {
            String array[] = CommandUtils.convertToArray(comando);
            BaseCommand newCommand = CommandFactory.getCommand(array[0], array, player);
            if (newCommand.getCommandName().toUpperCase().equals("ERROR")) {
                showClientMessage(newCommand.executeOnClient());
            } else  if (
                    newCommand.getCommandName().toUpperCase().equals("CHAT") ||
                    newCommand.getCommandName().toUpperCase().equals("CHAT PRIVADO") ||
                    newCommand.getCommandName().toUpperCase().equals("CREAR PERSONAJE") ||
                    newCommand.getCommandName().toUpperCase().equals("INICIAR PARTIDA") ||
                    player.isTurn()
                    ){
                try {
                    ClientManager.getCM().getThreadClient().getWriter().writeObject(newCommand);
                } catch (IOException ex) {
                }
            } else
                showCommandRegistry("No es su turno");
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void initBoard() {
        pnlBoard.setLayout(new GridLayout(21, 31, 0, 0));
        Border whileLine = BorderFactory.createLineBorder(Color.white);
        int x = 1;
        JLabel blank = new JLabel();
        pnlBoard.add(blank);
        for (int i = 1; i < 31; i++) {
            JLabel label = new JLabel(Integer.toString(i));
            label.setForeground(Color.white);
            label.setHorizontalAlignment(JLabel.CENTER);
            pnlBoard.add(label);            
        }
        for (int row = 0; row < 20; row++) {
            JLabel label = new JLabel(Integer.toString(x));
            label.setForeground(Color.white);
            label.setHorizontalAlignment(JLabel.CENTER);
            pnlBoard.add(label);
            x++;
            for (int col = 0; col < 30; col++) {
                int[] placement = {row+1, col+1};
                Cell cell = new Cell("E", placement);
                cell.setText("");
                cell.setOpaque(true);
                cell.setBackground(Color.gray);
                cell.setForeground(Color.black);
                cell.setFocusable(false);
                cell.setBorder(whileLine);
                player.getCells()[row][col] = cell;
                pnlBoard.add(player.getCells()[row][col]);
            }
        }
    }
    
    public void showPopup(String str) {
        JTextArea textArea = new JTextArea(str);
        JScrollPane scrollPane = new JScrollPane(textArea);  
        textArea.setLineWrap(true);  
        textArea.setWrapStyleWord(true); 
        scrollPane.setPreferredSize( new Dimension( 500, 500 ) );
        JOptionPane.showMessageDialog(null, scrollPane, "Registro",  
                                               JOptionPane.INFORMATION_MESSAGE);
    }
    
    private void initClient() {
        ClientManager.getCM().setMainScreen(this);
        String name = JOptionPane.showInputDialog("Escriba su nombre por favor");
        ClientManager.getCM().setClient();
        ClientManager.getCM().setPlayerName(name);
        player = new Player(name);
        initBoard();
        ClientManager.getCM().getClient().connect(player);
    }
    
    private void showCommandRegistry(String msg) {
        String text = txaCommandsRegistry.getText();
        text += "\n" + msg;
        txaCommandsRegistry.setText(text);
    }

    public void showClientMessage(String msg) {
        this.txaLogs.append(msg + "\n");
    }
    
    public void printCells(Cell[][] cells) {
//        Cell[][] cells = player.getCells();
        for (Cell[] row : cells)
            System.out.println(Arrays.toString(row));
    }
    
//    public void addFighter(Fighter fighter) {
//        
//        int x = 0;
//        Cell[][] cellsAux = new Cell[20][30];
//        for (int row = 0; row < this.player.getCells().length; row++)
//            for (int n = 0; n < this.player.getCells()[row].length; n++) {
//                int[] coords = new int[2];
//                Cell initialCell = this.player.getCells()[row][n];
//                System.arraycopy(initialCell.getPlacement(), 0, coords, 0, 2);
//                Cell newCell = new Cell("", coords);
//                newCell.setBackground(initialCell.getBackground());
//                cellsAux[row][n] = newCell;
//            }
//        shuffleMatrix(cellsAux);
//        outerloop:
//        for (Cell[] cell1 : cellsAux) {
//            for (Cell cell : cell1) {
//                if (x == numOfCellsToPaint)
//                    break outerloop;
//                else if (cell.getBackground() == Color.gray) {
//                    cell.setFighter(fighter);
//                    x++;
//                }
//            }
//        }
//        updateCells(cellsAux);
//    }
    
    private void shuffleMatrix(Cell[][] arr) {
        Random random = new Random();

        for (int i = arr.length - 1; i > 0; i--) {
            for (int j = arr[i].length - 1; j > 0; j--) {
                int m = random.nextInt(i + 1);
                int n = random.nextInt(j + 1);

                Cell temp = arr[i][j];
                arr[i][j] = arr[m][n];
                arr[m][n] = temp;
            }
        }
    }

    public Player getPlayer() {
        return player;
    }

    public void setPlayer(Player player) {
        this.player = player;
    }
    
//    public void updateCells(Cell[][] newCells) {
//        int x = 0;
//        int y = 0;
//        try {
//            for (int row = 0; row < this.player.getCells().length; row++) {
//                for (int cell = 0; cell < this.player.getCells()[row].length; cell++) {
//                    Cell newCell = newCells[row][cell];
//                    int[] placements = newCell.getPlacement();
//                    x = placements[0] - 1;
//                    y = placements[1] - 1;
//                    this.player.getCells()[x][y].updateCell(newCell);
//                }
//            }
//        } catch (java.lang.ArrayIndexOutOfBoundsException ex) {
//            ex.printStackTrace();
//        }
//    }
    
    public String askForThreeNumbers() {
        return JOptionPane.showInputDialog("Un jugador lo esta atacando, digite 3 numeros separados por \"-\"");
    }
    
    public static void start() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel pnlBoard;
    private javax.swing.JPanel pnlCommands;
    private javax.swing.JPanel pnlGameData;
    private javax.swing.JPanel pnlLeft;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlRight;
    private javax.swing.JTextArea txaAttackResults;
    private javax.swing.JTextArea txaCommandsRegistry;
    private javax.swing.JTextArea txaLogs;
    private javax.swing.JTextField txfCommand;
    // End of variables declaration//GEN-END:variables
}
